#   IF1 --> |No|ELSE1_A[Print congratz msg];
#   ELSE1_A --> ELSE1_B[Turn On LED];
#   IF1 --> |Yes|IF1_A[Blink LED];
#   IF1_A --> IF2 {Double Score not reached?};
#   IF2 --> |NO|IF2_A[Increment Double Score Counter];
#   IF2_A --> IF2_B [Increment Score];
#   IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
#   ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
#   ELSE2_B -->C[Print Score];
#   IF2_B --> c;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
#   IF1 --> |No|ELSE1_A[Print congratz msg];
#   ELSE1_A --> ELSE1_B[Turn On LED];
#   IF1 --> |Yes|IF1_A[Blink LED];
#   IF1_A --> IF2 {Double Score not reached?};
#   IF2 --> |NO|IF2_A[Increment Double Score Counter];
#   IF2_A --> IF2_B [Increment Score];
#   IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
#   ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
#   ELSE2_B -->C[Print Score];
#   IF2_B --> c;
"
mermaid(Program2)
# This is the flow chart for Program #2
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached?};
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B [Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached?};
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B [Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached?};
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B [Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached?};
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B [Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached?};
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B [Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
"
mermaid(Program2)
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
"
mermaid(Program2)
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached?};
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached};
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B [Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached};
"
mermaid(Program2)
mermaid(Program2)
# This is the flow chart for Program #2
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
IF1_A --> IF2 {Double Score not reached};
"
mermaid(Program2)
# This is the flow chart for Program #2
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
#  IF1_A --> IF2 {Double Score not reached};
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes|IF1_A[Blink LED];
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes| IF1_A [Blink LED];
IF1_A --> IF3 {Double Score not reached};
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes| IF1_A [Blink LED];
IF1_A --> IF3 {Double Score};
"
mermaid(Program2)
# This is the flow chart for Program #2
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes| IF1_A [Blink LED];
IF1_A --> IF3 [Double Score not reached];
"
mermaid(Program2)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes| IF1_A [Blink LED];
MERMAID(Program2)
"
mermaid(Program2)
mermaid(Program2)
library(DiagrammeR)
#This is the flow chart for Program #1
Program1 <-"
graph TD;
A[Setup pin 13] --> B[Turn On LED];
B --> C[Delay 1s];
C --> D[Turn Off LED];
D --> B
"
mermaid(Program1)
library(DiagrammeR)
Program2 <-"
graph TD;
A[Establish Serial Comm] --> B[Setup pin 13];
B --> IF1{Max Score reached};
IF1 --> |No|ELSE1_A[Print congratz msg];
ELSE1_A --> ELSE1_B[Turn On LED];
IF1 --> |Yes| IF1_A [Blink LED];
"
mermaid(Program2)
A[Establish Serial Comm] --> B[Setup pin 13];
A[Establish Serial Comm] --> B[Setup pin 13];
A[Establish Serial Comm] --> B[Setup pin 13];
A[Establish Serial Comm] --> B[Setup pin 13];
graph TD;
# This is the flow chart for Program #2
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes| IF1_A [Blink LED]
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes| IF1_A [Blink LED]
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached}
IF1 --> |No|ELSE1_A[Print congratz msg]
IF1 --> |Yes| IF1_A [Blink LED]
ELSE1_A --> ELSE1_B[Turn On LED]
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B [Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score not reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score not reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF1_A --> IF2{Double points not reached?}
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score not reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF1_A --> IF2{Double points reached?}
IF2 --> |NO|IF2_A[Increment Double Score Counter];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score not reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF1_A --> IF2{Double points reached?}
IF2 --> |NO|IF2_A[Increment Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B -->C[Print Score];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
IF2_B --> C;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score not reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF1_A --> IF2{Double points reached?}
IF2 --> |NO|IF2_A[Increment Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B --> C[Print Score];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
IF2_B --> C;
C --> IF1;
ELSE1_A --> IF1;
"
mermaid(Program2)
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score not reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF1_A --> IF2{Double points reached?}
IF2 --> |NO|IF2_A[Increment Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B --> C[Print Score];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
IF2_B --> C;
C --> IF1;
ELSE1_B --> IF1;
"
mermaid(Program2)
library(DiagrammeR)
Program2 <-"
graph TD
A[Establish Serial Comm] --> B[Setup pin 13]
B --> IF1{Max Score not reached?}
IF1 --> |No|ELSE1_A[Print congratz msg]
ELSE1_A --> ELSE1_B[Turn On LED]
IF1 --> |Yes|IF1_A[Blink LED]
IF1_A --> IF2{Double points reached?}
IF2 --> |NO|IF2_A[Increment Double Score Counter];
ELSE2_A --> ELSE2_B[DOUBE CURRENT SCORE];
ELSE2_B --> C[Print Score];
IF2_A --> IF2_B[Increment Score];
IF2 --> |YES|ELSE2_A[Clear Double Score Counter];
IF2_B --> C;
C --> IF1;
"
mermaid(Program2)
devtools::create("mypackage")
